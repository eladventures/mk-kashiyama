{"file":"virtual_nuxt__Users_eladventures_Desktop_codes_mk-kashiyama_.nuxt_routes.mjs","mappings":";AAyBgB,SAAA,gBAAgB,SAAS,iBAAiB;AAM1D;AAEA,MAAe,UAAA;AAAA,EACb;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAMA,oBAAwD,CAAC;AAAA,IAC/D,WAAW,MAAM,OAAO,4BAAoE;AAAA,EAAA;AAEhG;","names":["indexo5COZfBut3GcGPiUKBAai2H5rA7PD7Uz2gFBynv6G2AMeta"],"sources":["../../../../virtual:nuxt:%2FUsers%2Feladventures%2FDesktop%2Fcodes%2Fmk-kashiyama%2F.nuxt%2Froutes.mjs"],"sourcesContent":["\nif (import.meta.hot) {\n  import.meta.hot.accept((mod) => {\n    const router = import.meta.hot.data.router\n    const generateRoutes = import.meta.hot.data.generateRoutes\n    if (!router || !generateRoutes) {\n      import.meta.hot.invalidate('[nuxt] Cannot replace routes because there is no active router. Reloading.')\n      return\n    }\n    router.clearRoutes()\n    const routes = generateRoutes(mod.default || mod)\n    function addRoutes (routes) {\n      for (const route of routes) {\n        router.addRoute(route)\n      }\n      router.replace(router.currentRoute.value.fullPath)\n    }\n    if (routes && 'then' in routes) {\n      routes.then(addRoutes)\n    } else {\n      addRoutes(routes)\n    }\n  })\n}\n\nexport function handleHotUpdate(_router, _generateRoutes) {\n  if (import.meta.hot) {\n    import.meta.hot.data ||= {}\n    import.meta.hot.data.router = _router\n    import.meta.hot.data.generateRoutes = _generateRoutes\n  }\n}\nimport { default as indexo5COZfBut3GcGPiUKBAai2H5rA7PD7Uz2gFBynv6G2AMeta } from \"/Users/eladventures/Desktop/codes/mk-kashiyama/src/pages/index.vue?macro=true\";\nexport default [\n  {\n    name: \"index\",\n    path: \"/\",\n    meta: indexo5COZfBut3GcGPiUKBAai2H5rA7PD7Uz2gFBynv6G2AMeta || {},\n    component: () => import(\"/Users/eladventures/Desktop/codes/mk-kashiyama/src/pages/index.vue\")\n  }\n]"],"version":3}